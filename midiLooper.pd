#N canvas 572 312 1277 531 10;
#X obj 519 342 cyclone/midiparse;
#X obj 548 172 tgl 22 0 empty empty empty 17 7 0 10 -216373 -66577
-1 0 1;
#X msg 555 239 stop;
#X text 578 174 play/stop;
#X obj 519 314 cyclone/midiflush;
#X msg 629 272 bang;
#X text 663 267 flush hanging;
#X text 665 281 MIDI notes;
#X obj 874 319 cyclone/seq;
#X msg 891 257 record;
#X obj 874 220 midiin;
#X obj 1018 197 notein;
#X obj 1018 247 cyclone/midiformat;
#X obj 1018 221 pack;
#X obj 1018 327 cyclone/seq;
#X msg 901 288 play;
#X obj 548 204 select 1 0;
#X obj 453 177 loadbang;
#X msg 629 235 read;
#X text 635 215 open another;
#X text 665 236 file;
#X msg 831 259 write;
#X text 800 44 You can directly record from raw MIDI data with [midiin].
Use the 'record' message to start recodring \, you don't need the stop
message to switch from recording and playing.;
#X text 802 139 You can record from specialized MIDI objects such as
[notein] using the [midiformat] object to convert the messages to raw
MIDI.;
#X msg 1048 274 record;
#X msg 1062 299 play;
#X obj 874 419 cyclone/midiparse;
#X obj 1017 418 cyclone/midiformat;
#X obj 948 455 cyclone/midiflush;
#X text 628 391 synthesizer;
#N canvas 638 210 345 266 polysynth 0;
#X obj 65 20 inlet;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 41 151 pd synth;
#X obj 65 84 pack f f f;
#X obj 100 207 outlet~;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 100 151 pd synth;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 161 152 pd synth;
#X text 124 19 3-voice polyphonic synth;
#X obj 65 115 route 1 2 3, f 18;
#X obj 65 52 poly 3 1;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 4 0;
#X connect 7 2 5 0;
#X connect 8 0 2 0;
#X connect 8 1 2 1;
#X connect 8 2 2 2;
#X restore 519 375 pd polysynth;
#X text 600 375 <= 3 voice polyphonic;
#X obj 499 412 ./out~;
#X text 810 368 Please check the help file of [midiparse] \, [midiformat]
and [midiflush] \, which are useful with [seq].;
#X text 409 44 Below \, we play and stop with a toggle. At the end
of the file \, a bang out the 2nd outlet of [seq] makes it play again
in a loop. When you stop it with the toggle \, it also flushes possible
hanging MIDI notes (with [midiflush]). We use [midiparse] to send note
messages to our synth.;
#X text 801 100 Use 'write' to save to a MIDI file with the dialog
box \, or use 'write <symbol>' to save to a specific file.;
#X msg 415 245 delay 500;
#X text 411 110 Use the 'read' message to open another file with the
dialog box and 'read seq.mid' to re open the example. The 'delay' message
adds a delay in ms before sending the fisrt event.;
#X obj 519 274 cyclone/seq;
#X msg 493 230 start -1;
#X obj 173 198 metro;
#X msg 170 245 tick;
#X obj 173 175 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 173 134 loadbang;
#X obj 225 232 nbx 7 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0.811688 256;
#X obj 225 205 expr 60000 / ($f1 * 24);
#X text 40 47 When you send it "start -1" \, it expects 'tick' messages
as the clock \, so you can use it to vary the playback tempo or to
synchronize with another clock (such as incoming MIDI Clock messages).
24 clock ticks is a quarter note \, you can convert BPM to time per
clock tick;
#X text 53 177 play:;
#X text 300 225 tick time in ms, f 9;
#X msg 225 165 120;
#X obj 225 186 nbx 5 14 30 10000 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 3080 256;
#X text 293 185 BPM;
#X msg 453 202 read seq2.mid;
#X connect 0 0 30 0;
#X connect 1 0 16 0;
#X connect 2 0 38 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 13 0;
#X connect 11 1 13 1;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 15 0 8 0;
#X connect 16 0 39 0;
#X connect 16 1 2 0;
#X connect 16 1 5 0;
#X connect 17 0 52 0;
#X connect 18 0 38 0;
#X connect 21 0 8 0;
#X connect 24 0 14 0;
#X connect 25 0 14 0;
#X connect 30 0 32 0;
#X connect 30 0 32 1;
#X connect 36 0 38 0;
#X connect 38 0 4 0;
#X connect 38 1 39 0;
#X connect 39 0 38 0;
#X connect 40 0 41 0;
#X connect 41 0 38 0;
#X connect 42 0 40 0;
#X connect 43 0 42 0;
#X connect 43 0 49 0;
#X connect 44 0 40 1;
#X connect 45 0 44 0;
#X connect 49 0 50 0;
#X connect 50 0 45 0;
#X connect 52 0 38 0;
